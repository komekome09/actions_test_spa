[{"/home/komekome09/actions_test_spa/src/index.tsx":"1","/home/komekome09/actions_test_spa/src/reportWebVitals.ts":"2","/home/komekome09/actions_test_spa/src/App.tsx":"3"},{"size":516,"mtime":1609757582240,"results":"4","hashOfConfig":"5"},{"size":425,"mtime":1609757582240,"results":"6","hashOfConfig":"5"},{"size":4944,"mtime":1609757582240,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"ckceem",{"filePath":"11","messages":"12","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},{"filePath":"13","messages":"14","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15"},"/home/komekome09/actions_test_spa/src/index.tsx",[],["16","17"],"/home/komekome09/actions_test_spa/src/reportWebVitals.ts",[],"/home/komekome09/actions_test_spa/src/App.tsx",["18"],"import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport axios from 'axios';\n\ninterface FlightInfo {\n  on_time: string | number,\n  change_time: string | number,\n  destination_jp: string | number,\n  destination_en: string | number,\n  flight_number: string | number,\n  terminal: string | number,\n  gate: string | number,\n  flight_status: string | number,\n  [key: number]: string | number\n}\n\nclass FlightData {\n  flightsData: FlightInfo[] = [];\n  static base_url = 'https://tokyo-haneda.com/app_resource/flight/data/';\n  static proxy = 'https://blooming-lowlands-21185.herokuapp.com/';\n  static filename = 'hdacfdep.json';\n  \n  getFlightsData() : FlightInfo[] {\n    return this.flightsData;\n  }\n\n  setFlightsData(flightData: FlightInfo): void{\n    this.flightsData.push(flightData);\n  }\n\n  paddingDigits(num: number): string{\n    let numstr = num + \"\";\n    if(numstr.length === 1){\n        numstr = \"0\" + numstr;\n    }\n    return numstr;\n  }\n\n  getFlight(url: string) {\n    const AxiosInstance = axios.create();\n    AxiosInstance.get(url)\n    .then(\n        response => {\n            const json = response.data;\n            console.log(json);\n\n            if(json.flight_end === true){\n                console.log(\"Today's flight is ended\");\n                return;\n            }\n\n            for(let i of json.flight_info){\n                let timeEst = new Date(i.定刻).getTime();\n                let timeChn = new Date(i.変更時刻).getTime();\n                let timeRea = 0;\n                if(isNaN(timeChn)) timeRea = timeEst;\n                else timeRea = timeChn;\n                let nowTime = new Date().getTime();\n\n                if(timeRea < nowTime) continue;\n\n                let onTime_Date = new Date(i.定刻);\n                let onTime_Hours = onTime_Date.getHours();\n                let onTime_Minutes = onTime_Date.getMinutes();\n                let onTime_str = this.paddingDigits(onTime_Hours) + \":\" + this.paddingDigits(onTime_Minutes);\n\n                let chTime_Date = new Date(i.変更時刻);\n                let chTime_Hours = chTime_Date.getHours();\n                let chTime_Minutes = chTime_Date.getMinutes();\n                let chTime_str = \"\";\n                if(!isNaN(chTime_Hours) && !isNaN(chTime_Minutes)){\n                    chTime_str = this.paddingDigits(chTime_Hours) + \":\" + this.paddingDigits(chTime_Minutes);\n                }\n                let flightData: FlightInfo = {\n                    on_time: onTime_str,\n                    change_time: chTime_str, \n                    destination_jp: i.行先地空港和名称,\n                    destination_en: i.行先地空港英名称,\n                    flight_number: i.航空会社[0].ＡＬコード + i.航空会社[0].便名,\n                    terminal: i.ターミナル区分,\n                    gate: i.ゲート和名称,\n                    flight_status: i.備考和名称};\n                this.setFlightsData(flightData);\n            }\n        }\n    )\n    .catch(console.error);\n  }\n\n  getDomesticFlight() {\n    const url_dms = FlightData.proxy + FlightData.base_url + 'dms/' + FlightData.filename;\n    this.getFlight(url_dms);  \n  }\n\n  getInternationalFlight(){\n    const url_int = FlightData.proxy + FlightData.base_url + 'int/' + FlightData.filename; \n    this.getFlight(url_int);\n  }\n}\n\nclass FlightTable extends React.Component {\n  fd_dom: FlightData = new FlightData();\n  fd_int: FlightData = new FlightData();\n  constructor(props: React.FC){\n    super(props);\n    this.fd_dom.getDomesticFlight();\n    this.fd_int.getInternationalFlight();\n  }\n  \n  render() {\n    const listItems = this.fd_int.flightsData.map((l) => {\n      <tr>\n        <td>{l.on_time}</td>\n        <td>{l.change_time}</td>\n        <td>{l.destination_jp}</td>\n        <td>{l.destination_en}</td>\n        <td>{l.flight_number}</td>\n        <td>{l.terminal}</td>\n        <td>{l.gate}</td>\n        <td>{l.flight_status}</td>\n      </tr>\n    });\n    return (\n      <table>\n        <thead>\n          <tr>\n            <th>定刻</th>\n            <th>変更</th>\n            <th colSpan={2}>行先</th>\n            <th>便名</th>\n            <th>ターミナル</th>\n            <th>搭乗口</th>\n            <th>運行状況</th>\n          </tr>\n        </thead>\n        <tbody>\n          {listItems}\n        </tbody>\n      </table>\n    );\n  }\n}\n\nexport default class FlightBoard extends React.Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <p>\n            Edit <code>src/App.tsx</code> and save to reload.\n          </p>\n          <a\n            className=\"App-link\"\n            href=\"https://reactjs.org\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Learn React\n          </a>\n          <FlightTable />\n        </header>\n      </div>\n    );\n  }\n}",{"ruleId":"19","replacedBy":"20"},{"ruleId":"21","replacedBy":"22"},{"ruleId":"23","severity":1,"message":"24","line":112,"column":55,"nodeType":"25","messageId":"26","endLine":112,"endColumn":57},"no-native-reassign",["27"],"no-negated-in-lhs",["28"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation"]